name: 'Heater-shaker create release from tag'
on:
  push:
    tags:
      - 'heater-shaker@*'
  workflow_dispatch:


defaults:
  run:
    shell: bash


jobs:
  cross-compile-check-and-release:
    name: 'Cross-Compile/Check and Create Release'
    runs-on: 'ubuntu-20.04'
    timeout-minutes: 10
    steps:
      - uses: 'actions/checkout@v2'
        with:
          fetch-depth: 0
      - uses: 'actions/cache@v2'
        with:
          key: stm32-cross-${{ secrets.MODULES_STM32_CACHE_VERSION }}-${{ hashFiles('cmake/*') }}
          restore-keys: stm32-cross-${{ secrets.MODULES_STM32_CACHE_VERSION }}-
          path: './stm32-tools'
      - name: 'Configure'
        run: cmake --preset=stm32-cross .
      - name: 'Format'
        run: cmake --build ./build-stm32-cross --target heater-shaker-format-ci
      - name: 'Lint'
        run: cmake --build ./build-stm32-cross --target heater-shaker-lint
      - name: 'Build'
        run: cmake --build ./build-stm32-cross --target heater-shaker-hex
      - name: 'Build Combo Image Hex'
        run: cmake --build ./build-stm32-cross --target heater-shaker-image-hex
      - name: 'Build Combo Image Binary'
        run: cmake --build ./build-stm32-cross --target heater-shaker-image-bin
      - name: 'Create Release'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Changes in this Release
            - change list
          draft: false
          prerelease: true
      - name: 'Upload Release Binary'
        id: upload_release_binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-stm32-cross
          asset_name: heater-shaker-image.bin
          asset_content_type: application/octet-stream
      - name: 'Upload Release Hex'
        id: upload_release_hex
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-stm32-cross
          asset_name: heater-shaker-image.hex
          asset_content_type: application/octet-stream
      - name: 'Upload Release Executable'
        id: upload_release_executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-stm32-cross
          asset_name: heater-shaker
          asset_content_type: application/octet-stream


  host-compile-test:
    name: 'Host-Compile/Test'
    runs-on: 'ubuntu-20.04'
    timeout-minutes: 10
    env:
      CC: gcc-10
      CXX: g++-10
    steps:
      - run: |
          sudo apt update
          sudo apt install gcc-10 g++-10
      - uses: 'actions/checkout@v2'
        with:
          fetch-depth: 0
      - uses: 'actions/cache@v2'
        with:
          path: './stm32-tools'
          key: stm32-host-${{ secrets.MODULES_STM32_CACHE_VERSION }}-${{ hashFiles('cmake/*') }}
          restore-keys: stm32-host-${{ secrets.MODULES_STM32_CACHE_VERSION }}-
      - name: 'Configure'
        run: cmake --preset=stm32-host .
      - name: 'Build Simulator'
        run: cmake --build ./build-stm32-host --target heater-shaker-simulator
      - name: 'Build and Test'
        run: cmake --build ./build-stm32-host --target heater-shaker-build-and-test
